#!/usr/bin/python

import os
import re


def merge_two_dicts(x, y):
    z = x.copy()   # start with x's keys and values
    z.update(y)    # modifies z with y's keys and values & returns None
    return z


def flatten(xs):
    res = []

    def loop(ys):
        for i in ys:
            if isinstance(i, list):
                loop(i)
            else:
                res.append(i)
    loop(xs)
    return res


def get_emacs_load_file():

    load_file = os.path.expanduser("~/.emacs.d/code-manager-packages.el")
    emacs_init = os.path.expanduser("~/.emacs")
    if not os.path.isfile(load_file):
        with open(load_file, 'w+') as file:
            file.write(";; this file was generated by code-manager\n")
            file.write(";; all the packages of code-manager \
            will be loaded here\n")
            file.write(";; do not edit this file\n\n")

    if not os.path.isfile(emacs_init):
        emacs_init = "~/.emacs.el"
    if not os.path.isfile(emacs_init):
        emacs_init = "~/.emacs.d/init.el"

    with open(emacs_init, 'r') as file:
        content = file.read()
        match  = re.search('(load-file \"~/.emacs.d/code-manager-packages.el\")', content)

    if not match:
        with open(emacs_init, 'a') as file:
            file.write(f'\n\n;; this \'load-file\' added by code-manager \n')
            file.write(f'\n\n;; it loads the packages installed by code-manager\n')
            file.write(f'\n\n;; do not delete\n')
            file.write(f'(load-file \"~/.emacs.d/code-manager-packages.el\")\n\n')
        
        
    
    
    return load_file
